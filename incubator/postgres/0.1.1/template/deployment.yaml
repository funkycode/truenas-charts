apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgres.fullname" . }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
spec:
  replicas: {{ (default 1 .Values.replicas) }}
  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "postgres.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          {{ range $index, $hostPathConfiguration := .Values.appVolumeMounts }}
          - name: extrappvolume-{{ $index }}
            mountPath: {{ $hostPathConfiguration.mountPath }}
          {{ end }}
          ports:
            - name: tcp
              containerPort: {{ .Values.ports.tcp_port }}
              {{ if .Values.hostNetwork }}
              hostPort: {{ .Values.ports.tcp_port }}
              {{ end }}
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - exec pg_isready -U "postgres" -h 127.0.0.1 -p {{ .Values.ports.tcp_port }}
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - exec pg_isready -U "postgres" -h 127.0.0.1 -p {{ .Values.ports.tcp_port }}
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: {{ .Values.hostNetwork }}
      hostname: postgres
      volumes:
      {{ range $index, $hostPathConfiguration := .Values.appVolumeMounts }}
        - name: extrappvolume-{{ $index }}
          hostPath:
            path: {{ $hostPathConfiguration.hostPath }}
      {{ end }}
